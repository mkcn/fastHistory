name: Create release PIP

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'fastHistory/config/default_version.txt'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get release version from version file
        run: |
            echo "FH_RELEASE_VERSION=$(cat $GITHUB_WORKSPACE/fastHistory/config/default_version.txt | tr -d '\n')" >> $GITHUB_ENV
            
      - name: Show version 
        run: echo ${{ env.FH_RELEASE_VERSION }}

      - name: Setup build env
        run: |
            python3 --version
            pip3 --version
            
            pip3 install setuptools
            pip3 install wheel
            pip3 install twine
            
            pip3 install bashlex
            pip3 install pyperclip

      - name: Build whl package
        run: |
            cd $GITHUB_WORKSPACE/pip/
            python3 setup.py bdist_wheel
            
      - name: Test installation from whl package
        run: |
            pip3 install --user --no-deps --ignore-installed $GITHUB_WORKSPACE/pip/dist/fastHistory-*.whl
            $HOME/.local/bin/f --setup
            $HOME/.local/bin/f --version --from-installer
            echo "FH_WHL_VERSION=$($HOME/.local/bin/f --version --from-installer | tr -d '\n')" >> $GITHUB_ENV
            $GITHUB_WORKSPACE/installer.sh -u --yes-delete-everything
            
      - name: Check version matching
        run: |
            if [[ ${{ env.FH_WHL_VERSION }} == ${{ env.FH_RELEASE_VERSION }} ]]; then
                echo "version ok: ${{ env.FH_WHL_VERSION }}"
            else
                echo "Error: something is wrong, the whl package and the repo have different versions"
                echo "FH_WHL_VERSION: ${{ env.FH_WHL_VERSION }} "
                echo "FH_RELEASE_VERSION: ${{ env.FH_RELEASE_VERSION }}"
                exit 1
            fi

      - name: Deploy on test.pypi.org
        run: |
            cd $GITHUB_WORKSPACE/pip/
            python3 -m twine upload -u __token__ -p ${{ secrets.TEST_PYPI_API_TOKEN }} --repository-url "https://test.pypi.org/legacy/" dist/*.whl 

      - name: Test installation from test.pypi.org
        run: |
            # bashlex is not present in the test pypi, therefore it needs "--no-deps"
            pip3 install --user --index-url https://test.pypi.org/simple/ --no-deps fastHistory
            $HOME/.local/bin/f --setup
            $HOME/.local/bin/f --version --from-installer
            $GITHUB_WORKSPACE/installer.sh -u --yes-delete-everything

      - name: Deploy on pypi.org
        run: |
            cd $GITHUB_WORKSPACE/pip/
            python3 -m twine upload -u __token__ -p ${{ secrets.PYPI_API_TOKEN }} dist/*.whl 

      - name: Test installation from pypi.org
        run: |
            pip3 install --user fastHistory
            $HOME/.local/bin/f --setup
            $HOME/.local/bin/f --version --from-installer
            $GITHUB_WORKSPACE/installer.sh -u --yes-delete-everything
